combined_df <- read.table("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MIXCR/Data/P3G6_combined_df.txt")
View(combined_df)
IGH_chains <- combined_df %>% filter(Chain == "IGH")
################################################################################
# Manuscript: Clonal Evolution of Paediatric Burkitt Lymphoma Through Time and Space
# Description: Script for plotting MiXCR results for patient P3G6
# Author: Alexander Steemers
# Date: June 2025
################################################################################
# Load libraries
library(dplyr)
library(ComplexHeatmap)
library(randomcoloR)
library(circlize)
library(readxl)
# Set working directory
setwd("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MIXCR/")
# Load metadata
input_df <-  read_excel('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/1_Input/Sample_overview.xlsx')
# read in MiXCR ouput for each patient
P3G6_batch_1 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P3G6_batch1/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P3G6_batch_2 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P3G6_batch2/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P3G6_batch_3 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P3G6_bulk/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
files <- c(P3G6_batch_1, P3G6_batch_2, P3G6_batch_3)
# Read each .tsv file into a list
tsv_files_list <- lapply(files, function(x) read.delim(x, header = TRUE, sep = "\t"))
# Set names of the list based on file names (without .tsv extension)
names(tsv_files_list) <- gsub("\\.tsv$", "", basename(files))
# Combine tsv file list into one dataframe
combined_df <- do.call("rbind", lapply(tsv_files_list, as.data.frame))
combined_df$SampleId <- rep(names(tsv_files_list), sapply(tsv_files_list, nrow))
# Extract sample id from tsv file names
combined_df$NovogeneName <- sapply(1:length(combined_df$SampleId), FUN=function(x) strsplit(combined_df$SampleId, split="_")[[x]][1])
# Extract chain from tsv file names
combined_df$Chain <- sapply(1:length(combined_df$SampleId), FUN=function(x) strsplit(combined_df$SampleId, split="_")[[x]][3])
# Match encrypted file names to legible cell names
combined_df$SampleName <- combined_df$NovogeneName
# Add myc translocation info
combined_df$Myc_translocation <- input_df$Myc_translocation_IGV[match(combined_df$NovogeneName, input_df$Sample_name)]
# Extract V, D and J genes
combined_df$V_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allVHitsWithScore, split="\\*00")[[x]][1])
combined_df$D_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allDHitsWithScore, split="\\*00")[[x]][1])
combined_df$J_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allJHitsWithScore, split="\\*00")[[x]][1])
# Merge genes to receptor recombination names
combined_df <- mutate(combined_df, BCR = paste(V_gene, D_gene, J_gene, sep = "_"))
# Add info on whether contig is functional (in frame and no stop codon)
combined_df <- combined_df %>%
mutate(functional = case_when(grepl("_", aaSeqCDR3) ~ "No",
grepl("\\*", aaSeqCDR3) ~ "No",
TRUE ~ "Yes"))
# Save file
write.table(combined_df, "~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MIXCR/Data/P3G6_combined_df.txt")
# Possibility to continue from saved df
combined_df <- read.table("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MIXCR/Data/P3G6_combined_df.txt")
# Plot 1: IgH
# Only functional heavy chains in single cells
IGH_chains <- combined_df %>% filter(Chain == "IGH")
IGH_chains <- IGH_chains[!grepl("No", IGH_chains$functional),]
View(combined_df)
################################################################################
# Manuscript: Clonal Evolution of Paediatric Burkitt Lymphoma Through Time and Space
# Description: Script for plotting MiXCR results for patient P856
# Author: Alexander Steemers
# Date: June 2025
################################################################################
# Load libraries
library(dplyr)
library(ComplexHeatmap)
library(randomcoloR)
library(circlize)
library(readxl)
# Set working directory
setwd("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MIXCR/")
# Load metadata
input_df <-  read_excel('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/1_Input/Sample_overview.xlsx')
# read in MiXCR ouput for each patient
# List only .tsv files in all subdirectories
P856_batch_1 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P856_batch1/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P856_batch_2 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P856_batch2/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P856_batch_3 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P856_batch3/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P856_batch_4 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P856_batch4/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P856_batch_5 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P856_bulk_PL/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
P856_batch_6 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/P856_bulk_BM/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
files <- c(P856_batch_1, P856_batch_2, P856_batch_3,P856_batch_4, P856_batch_5, P856_batch_6)
# Read each .tsv file into a list
tsv_files_list <- lapply(files, function(x) read.delim(x, header = TRUE, sep = "\t"))
# Set names of the list based on file names (without .tsv extension)
names(tsv_files_list) <- gsub("\\.tsv$", "", basename(files))
# Combine tsv file list into one dataframe
combined_df <- do.call("rbind", lapply(tsv_files_list, as.data.frame))
combined_df$SampleId <- rep(names(tsv_files_list), sapply(tsv_files_list, nrow))
# Extract sample id from tsv file names
combined_df$NovogeneName <- sapply(1:length(combined_df$SampleId), FUN=function(x) strsplit(combined_df$SampleId, split="_")[[x]][1])
# Extract chain from tsv file names
combined_df$Chain <- sapply(1:length(combined_df$SampleId), FUN=function(x) strsplit(combined_df$SampleId, split="_")[[x]][3])
# Match encrypted file names to legible cell names
combined_df$SampleName <- combined_df$NovogeneName
# Add myc translocation info
combined_df$Myc_translocation <- input_df$Myc_translocation_IGV[match(combined_df$NovogeneName, input_df$Sample_name)]
# Extract V, D and J genes
combined_df$V_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allVHitsWithScore, split="\\*00")[[x]][1])
combined_df$D_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allDHitsWithScore, split="\\*00")[[x]][1])
combined_df$J_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allJHitsWithScore, split="\\*00")[[x]][1])
# Merge genes to receptor recombination names
combined_df <- mutate(combined_df, BCR = paste(V_gene, D_gene, J_gene, sep = "_"))
# Add info on whether contig is functional (in frame and no stop codon)
combined_df <- combined_df %>%
mutate(functional = case_when(grepl("_", aaSeqCDR3) ~ "No",
grepl("\\*", aaSeqCDR3) ~ "No",
TRUE ~ "Yes"))
View(combined_df)
################################################################################
# Manuscript: Clonal Evolution of Paediatric Burkitt Lymphoma Through Time and Space
# Description: Script for plotting MiXCR results for patient PRN4
# Author: Alexander Steemers
# Date: June 2025
################################################################################
# Load libraries
library(dplyr)
library(ComplexHeatmap)
library(randomcoloR)
library(circlize)
library(readxl)
# Set working directory
setwd("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MIXCR/")
# Load metadata
input_df <-  read_excel('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/1_Input/Sample_overview.xlsx')
# read in MiXCR ouput for each patient
# List only .tsv files in all subdirectories
PRN4_batch_1 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/PRN4_batch1/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
PRN4_batch_2 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/PRN4_batch2/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
PRN4_batch_3 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/PRN4_batch3/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
PRN4_batch_4 <- list.files(path = "~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/MIXCR_new/PRN4_bulk/Output/.", pattern = "\\.tsv$", recursive = TRUE, full.names = TRUE)
files <- c(PRN4_batch_1, PRN4_batch_2, PRN4_batch_3,PRN4_batch_4)
# Read each .tsv file into a list
tsv_files_list <- lapply(files, function(x) read.delim(x, header = TRUE, sep = "\t"))
# Set names of the list based on file names (without .tsv extension)
names(tsv_files_list) <- gsub("\\.tsv$", "", basename(files))
# Combine tsv file list into one dataframe
combined_df <- do.call("rbind", lapply(tsv_files_list, as.data.frame))
combined_df$SampleId <- rep(names(tsv_files_list), sapply(tsv_files_list, nrow))
# Extract sample id from tsv file names
combined_df$NovogeneName <- sapply(1:length(combined_df$SampleId), FUN=function(x) strsplit(combined_df$SampleId, split="_")[[x]][1])
# Extract chain from tsv file names
combined_df$Chain <- sapply(1:length(combined_df$SampleId), FUN=function(x) strsplit(combined_df$SampleId, split="_")[[x]][3])
# Match encrypted file names to legible cell names
combined_df$SampleName <- combined_df$NovogeneName
# Add myc translocation info
combined_df$Myc_translocation <- input_df$Myc_translocation_IGV[match(combined_df$NovogeneName, input_df$Sample_name)]
# Extract V, D and J genes
combined_df$V_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allVHitsWithScore, split="\\*00")[[x]][1])
combined_df$D_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allDHitsWithScore, split="\\*00")[[x]][1])
combined_df$J_gene <- sapply(1:nrow(combined_df), FUN=function(x) strsplit(combined_df$allJHitsWithScore, split="\\*00")[[x]][1])
# Merge genes to receptor recombination names
combined_df <- mutate(combined_df, BCR = paste(V_gene, D_gene, J_gene, sep = "_"))
# Add info on whether contig is functional (in frame and no stop codon)
combined_df <- combined_df %>%
mutate(functional = case_when(grepl("_", aaSeqCDR3) ~ "No",
grepl("\\*", aaSeqCDR3) ~ "No",
TRUE ~ "Yes"))
# Save file
View(combined_df)
