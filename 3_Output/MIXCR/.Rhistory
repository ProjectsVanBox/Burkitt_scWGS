show_column_names = TRUE,
column_names_gp = gpar(col = column_names_color, fontsize = 3),
border=TRUE,
column_title= "PVA9 BCR recombinations",
row_names_side = "right",
row_names_gp = gpar(fontsize = 6),
show_heatmap_legend = F,
row_title_rot = 0,
top_annotation = top_ha,
split=c(rep("IgH", n_bcr_igh), rep("IgH CDR3aa", n_cdr3_igh),
rep("IgK", n_bcr_igk), rep("IgK CDR3aa", n_cdr3_igk),
rep("IgL", n_bcr_igl), rep("IgL CDR3aa", n_cdr3_igl)))
dev.off()
bcr_mat_receptors_only <- bcr_mat[, grepl("^I", colnames(bcr_mat))]
pdf("Figures/PVA9_MiXCR_BCR_heatmap.pdf", width=8, height=14)
Heatmap(t(bcr_mat_receptors_only),
na_col="white",
col=col_discrete,
color_space = "RBG",
cluster_rows = FALSE,
cluster_columns = FALSE,
show_column_names = TRUE,
column_names_gp = gpar(col = column_names_color, fontsize = 3),
border=TRUE,
column_title= "PVA9 BCR recombinations",
row_names_side = "right",
show_heatmap_legend = F,
row_title_rot = 0,
top_annotation = top_ha,
split=c(rep("IgH", n_bcr_igh),
rep("IgK", n_bcr_igk),
rep("IgL", n_bcr_igl)))
dev.off()
pdf("Figures/PVA9_MiXCR_BCR_heatmap.pdf_small.pdf", width = 3.5, height = 3.5)
# Reduce default margins
par(mar = c(2, 2, 2, 2))
Heatmap(
t(bcr_mat_receptors_only),
na_col = "white",
col = col_discrete,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_column_names = TRUE,
column_names_gp = gpar(fontsize = 4, col = column_names_color),  # smaller column labels
row_names_gp = gpar(fontsize = 4),                                # smaller row labels
border = TRUE,
column_title = "PVA9 BCR recombinations",
column_title_gp = gpar(fontsize = 7),                            # slightly reduced title font
row_names_side = "right",
show_heatmap_legend = FALSE,
top_annotation = top_ha,
heatmap_width = unit(3, "in"),
heatmap_height = unit(3, "in")
)
dev.off()
################################################################################
# Manuscript: Clonal Evolution of Paediatric Burkitt Lymphoma Through Time and Space
# Description: Script to compare strand bias
# Author: Alexander Steemers
# Date: August 2025
################################################################################
# Load libraries
library(dplyr)
library(VariantAnnotation)
library(GenomeInfoDb)
library(BiocGenerics)
library(ggplot2)
library(dndscv)
library(purrr)
library(tidyr)
library(tibble)
library(readr)
library(ggrepel)
library(gridExtra)
library(MutationalPatterns)
library(GenomicFeatures)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
ref_genome <- "BSgenome.Hsapiens.UCSC.hg38"
library(ref_genome, character.only = TRUE)
# Load grl lists
branch_grl_P3G6 <- readRDS("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/CellPhy/Data/branch_grl_P3G6.rds")
branch_grl_PVA9 <- readRDS("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/CellPhy/Data/branch_grl_PVA9.rds")
branch_grl_PIA9 <- readRDS("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/CellPhy/Data/branch_grl_PIA9.rds")
branch_grl_PJBU <- readRDS("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/CellPhy/Data/branch_grl_PJBU.rds")
branch_grl_P856 <- readRDS("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/CellPhy/Data/branch_grl_P856.rds")
branch_grl_PRN4 <- readRDS("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/CellPhy/Data/branch_grl_PRN4.rds")
# Define branches per sample
# P3G6
group1_P3G6 <- c("Z")
group2_P3G6 <- c("T","R","Y","X","P")
group3_P3G6 <- c("J","I","H","N","M","Q","S","W","V","U")
group4_P3G6 <- c("B","A","D","F","G","a")
branch_to_group_P3G6 <- c(
setNames(rep("BL-Trunk",        length(group1_P3G6)), group1_P3G6),
setNames(rep("BL-Intermediate", length(group2_P3G6)), group2_P3G6),
setNames(rep("BL-Private",      length(group3_P3G6)), group3_P3G6),
setNames(rep("WT",              length(group4_P3G6)), group4_P3G6)
)
# PVA9
group1_PVA9 <- c("J3")
group2_PVA9 <- c("H3","G3","q2","N","v2","E3")
group3_PVA9 <- c("O2","N2","Q2","S2","H2","G2","J2","L2","V2","F2","C2","B2","A2","a2","Z2","z","e2","u","t","w","r","q","o","n","c","b","e","h","g","k","a","Z","l2","k2","n2","Q","P","O","T","W","V","A3","z2","x2","w2","D3","s2","r2","u2","M","L","I3")
group4_PVA9 <- c("L3","K3","N3","K","G","F","I","T3","S3","B","A")
branch_to_group_PVA9 <- c(
setNames(rep("BL-Trunk",        length(group1_PVA9)), group1_PVA9),
setNames(rep("BL-Intermediate", length(group2_PVA9)), group2_PVA9),
setNames(rep("BL-Private",      length(group3_PVA9)), group3_PVA9),
setNames(rep("WT",              length(group4_PVA9)), group4_PVA9)
)
# PIA9
group1_PIA9 <- c("a2")
group2_PIA9 <- c("d2","E3","C3","t2","s2","e2","G3","I3","J3")
group3_PIA9 <- c("L","K","N","P","I","H","G","T","W","V","Y","B","A","M3","E","D","b","H3","I2","k2","n2","j2","q2","h2","g2","f2","z2","y2","x2","v2","u2","D3","c2","b2")
group4_PIA9 <- c("s","r","u","u","w","p","o","z","n","m","E2","D2","I","I2","K2","M2","O2","k","R2","j","i","V2","X2","h","c","d")
branch_to_group_PIA9 <- c(
setNames(rep("BL-Trunk",        length(group1_PIA9)), group1_PIA9),
setNames(rep("BL-Intermediate", length(group2_PIA9)), group2_PIA9),
setNames(rep("BL-Private",      length(group3_PIA9)), group3_PIA9),
setNames(rep("WT",              length(group4_PIA9)), group4_PIA9)
)
# PJBU
group1_PJBU <- c("m2")
group2_PJBU <- c("T","l2","j2","T2","S","Q","L")
group3_PJBU <- c("k","j","m","i","p","h","s","f","e","d","w","c","Z","Y","W","V","G2","F2","E2","D2","K2","M2","O2","C2","B2","A2","U2","W2","b2","a2","Z2","f2","e2","Y2","k2","N","M","P","R","K","J","I")
group4_PJBU <- c("p2","o2","r2","t2","v2","n2","A3","z2","C3","G3","F3","I3","G","F","D","A")
branch_to_group_PJBU <- c(
setNames(rep("BL-Trunk",        length(group1_PJBU)), group1_PJBU),
setNames(rep("BL-Intermediate", length(group2_PJBU)), group2_PJBU),
setNames(rep("BL-Private",      length(group3_PJBU)), group3_PJBU),
setNames(rep("WT",              length(group4_PJBU)), group4_PJBU)
)
# P856
group1_P856 <- c("A2") # BL trunk
group2_P856 <- c("z", "q", "o") # BL intermediate BM
group3_P856 <- c("W", "V", "Y", "U", "b", "T", "e", "j", "i", "h", "g", "K", "J", "M", "O", "I", "H", "E", "D", "C", "p", "w", "v", "u", "s", "r") # BL private
group4_P856 <- c("A", "B") # WT
branch_to_group_P856 <- c(
setNames(rep("BL-Trunk",        length(group1_P856)), group1_P856),
setNames(rep("BL-Intermediate", length(group2_P856)), group2_P856),
setNames(rep("BL-Private",      length(group3_P856)), group3_P856),
setNames(rep("WT",              length(group4_P856)), group4_P856)
)
# PRN4
group1_PRN4 <- c("h") # BL trunk
group2_PRN4 <- c("p", "q", "a", "o", "m") # BL intermediate
group3_PRN4 <- c("G", "F", "E", "C", "B", "A", "v", "u", "x", "t", "M", "L", "O", "Q", "S", "V", "U", "Z", "Y", "j", "i", "l", "n") # BL private
group4_PRN4 <- c("g", "b", "c") # WT
branch_to_group_PRN4 <- c(
setNames(rep("BL-Trunk",        length(group1_PRN4)), group1_PRN4),
setNames(rep("BL-Intermediate", length(group2_PRN4)), group2_PRN4),
setNames(rep("BL-Private",      length(group3_PRN4)), group3_PRN4),
setNames(rep("WT",              length(group4_PRN4)), group4_PRN4)
)
# Bundle your per-patient objects and exact branchâ†’group maps
grl_by_sample <- list(
P3G6 = branch_grl_P3G6,
PVA9 = branch_grl_PVA9,
PIA9 = branch_grl_PIA9,
PJBU = branch_grl_PJBU,
P856 = branch_grl_P856,
PRN4 = branch_grl_PRN4
)
branch2group_by_sample <- list(
P3G6 = branch_to_group_P3G6,
PVA9 = branch_to_group_PVA9,
PIA9 = branch_to_group_PIA9,
PJBU = branch_to_group_PJBU,
P856 = branch_to_group_P856,
PRN4 = branch_to_group_PRN4
)
# Annotate each branch with sample/branch/group; drop empties and any unmapped branches
annotate_with_map <- function(grl, sample, b2g, drop_empty = TRUE) {
if (drop_empty) grl <- grl[elementNROWS(grl) > 0]
if (length(grl) == 0) return(GRangesList())
# Keep only branches that exist in the mapping
keep_names <- intersect(names(grl), names(b2g))
dropped <- setdiff(names(grl), keep_names)
if (length(dropped)) {
warning("Dropped unmapped branches in ", sample, ": ", paste(dropped, collapse=", "))
}
grl <- grl[keep_names]
imap(grl, function(gr, br) {
n <- length(gr)
mcols(gr)$sample <- rep(sample, n)
mcols(gr)$branch <- rep(br, n)
mcols(gr)$group  <- rep(unname(b2g[[br]]), n)
gr
}) |> GRangesList()
}
annotated_per_sample <- imap(
grl_by_sample,
~annotate_with_map(.x, .y, branch2group_by_sample[[.y]], drop_empty = TRUE)
)
# Combine all branches from all patients
all_branches_grl <- do.call(c, unname(annotated_per_sample))  # each element = a branch
# Determine each branch's group
branch_group <- vapply(
all_branches_grl,
function(gr) unique(as.character(mcols(gr)$group))[1],
character(1)
)
# Build one GRangesList with 4 elements: Trunk / Intermediate / Private / WT
group_levels <- c("BL-Trunk","BL-Intermediate","BL-Private","WT")
group_grs <- lapply(group_levels, function(g) {
idx <- which(branch_group == g)
if (length(idx) == 0) {
# return empty GRanges if that group isn't present
GRanges()
} else {
unlist(all_branches_grl[idx], use.names = FALSE)
}
})
names(group_grs) <- c("Trunk","Intermediate","Private","WT")
grl_by_group <- GRangesList(group_grs)
genes_hg38 <- genes(TxDb.Hsapiens.UCSC.hg38.knownGene)
# Convert all GRanges in grl_by_group to UCSC-style chromosome names (chr1, chr2, ...)
grl_by_group <- endoapply(grl_by_group, function(gr) {
# Drop unused seqlevels first to avoid errors
gr <- keepSeqlevels(gr, seqlevelsInUse(gr), pruning.mode = "coarse")
# Change naming style to UCSC (adds "chr")
seqlevelsStyle(gr) <- "UCSC"
gr
})
mut_mat_s <- mut_matrix_stranded(grl_by_group, ref_genome, genes_hg38)
mut_mat_s[1:5, 1:4]
branch <- c("Trunk", "Intermediate","Private", "WT" )
strand_counts <- strand_occurrences(mut_mat_s, by = branch)
strand_bias <- strand_bias_test(strand_counts)
ps1 <- plot_strand(strand_counts, mode = "relative")
ps2 <- plot_strand_bias(strand_bias, sig_type = "p")
grid.arrange(ps1, ps2)
strand_bias_notstrict <- strand_bias_test(strand_counts,
p_cutoffs = c(0.5, 0.1, 0.05),
fdr_cutoffs = 0.5
)
plot_strand_bias(strand_bias_notstrict, sig_type = "p")
repli_file <- system.file("extdata/ReplicationDirectionRegions.bed",
package = "MutationalPatterns"
)
repli_strand <- read.table(repli_file, header = TRUE)
# Store in GRanges object
repli_strand_granges <- GRanges(
seqnames = repli_strand$Chr,
ranges = IRanges(
start = repli_strand$Start + 1,
end = repli_strand$Stop
),
strand_info = repli_strand$Class
)
# UCSC seqlevelsstyle
seqlevelsStyle(repli_strand_granges) <- "UCSC"
repli_strand_granges
repli_strand_granges$strand_info <- factor(repli_strand_granges$strand_info,
levels = c("right", "left")
)
mut_mat_s_rep <- mut_matrix_stranded(grl_by_group, ref_genome, repli_strand_granges,
mode = "replication"
)
strand_counts_rep <- strand_occurrences(mut_mat_s_rep, by = branch)
strand_bias_rep <- strand_bias_test(strand_counts_rep)
ps1 <- plot_strand(strand_counts_rep, mode = "relative")
ps2 <- plot_strand_bias(strand_bias_rep)
grid.arrange(ps1, ps2)
################################################################################
# Manuscript: Clonal Evolution of Paediatric Burkitt Lymphoma Through Time and Space
# Description: Script to generate ultrametric trees for Donor P3G6
# Author: Alexander Steemers
################################################################################
# Load libraries and functions
library(tidyverse)
library(vcfR)
library(readxl)
library(ggtree)
library(treeio)
library(ape)
library(rtreefit)
library(stringi)
library(stringdist)
library(dplyr)
library(BSgenome.Hsapiens.NCBI.GRCh38)
library(ggnewscale)
ref_genome = 'BSgenome.Hsapiens.NCBI.GRCh38'
library(MutationalPatterns)
library(VariantAnnotation)
theme_set(theme_classic())
library(cellPhyWrapperPlotting)
# Load tree object
tree = readRDS("~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/TreeBuilding_Alex/P3G6/Filtered_samples/CPW_01/TreeObject0.1.RDS")
#vcf = VariantAnnotation::readVcf("~/hpc/pmc_vanboxtel/projects/Burkitt/3_Output/TreeBuilding_Alex/P3G6/P3G6.vep.sub.SNV.autosomal.noBulksNoBlacklist.vcf")
#vcf_bulk = VariantAnnotation::readVcf("~/hpc/pmc_vanboxtel/projects/Burkitt/1_Input/ASAP_FROM_CLOUD/P3G6/vcf_batches/batch_bulk/vcf/germline/somatic_filtering/SMuRF/P3G6_bulk.vep.SMuRF.filtered.sorted.vcf.gz")
# prepare tree
tree = prepare_tree(tree)
# plot bare tree
plot_gg_tree_base(tree)
plot_gg_tree_base(tree)+ geom_nodelab()
plot_gg_tree(tree, add_branch_length = TRUE, add_bootstrap = F, add_tip_label = F,add_title = "P3G6")
# VCF per branch
P3G6_contribution <- read.csv("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/MutationalPatterns/Data/Trees/P3G6_per_branch_sbs_contribution.csv", row.names = 1)
P3G6_contribution$Signature <- rownames(P3G6_contribution)
subset_sum <- P3G6_contribution %>%
filter(Signature %in% c("SBS1", "SBSblood")) %>%
summarise(across(where(is.numeric), sum))
vals <- setNames(as.numeric(subset_sum[1, ]), colnames(subset_sum))
#branch_vcf = extract_vcf_per_branch(tree = tree, vcf = vcf, ref_genome = ref_genome)
#branch_grl = convert_vcf_to_granges(branch_vcf_list = branch_vcf, ref_genome = ref_genome)
#branch_mm = mut_matrix(branch_grl, ref_genome)
#branch_mm_ctg <- branch_mm[grep("\\[C>T\\]G", rownames(branch_mm)), ]
#ctg_totals <- colSums(branch_mm_ctg)
ggtree(tree@phylo)
metadata <- tree@data
print(metadata)
x <- as_tibble(tree)
phylo_tree <-as.phylo(x)
x[18,] #this row contains NAs (node 15-to-15 connection)
x<- x[-18,] #deleting NA-filled row
phylo_tree$edge.length<-unname(x$branch_length)
phylo_tree$edge
print(phylo_tree)
# Create the age dataframe
agedf <- data.frame(
tip.label = metadata$tip.label,  # Must match tree$tip.label
age = rep(14.7,32)  # Replace these with your actual ages  (13.8 age + 0.9 pre-birth)
)
phylo_tree$agedf<-agedf
ggtree(phylo_tree)
#x <- x %>%
#  mutate(ctg_branch_lengths = ctg_totals[as.character(branch_id)])
x$sbs1_sbsblood_branch_lengths <- vals[as.character(x$branch_id)]
# correct for callable loci
# Step 1: Create sensitivity column in callable_df
max_callable <- 2745186691
input_df <-  read_excel('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/1_Input/Sample_overview.xlsx') #dataframe
input_df_P3G6 <- input_df[input_df$Novogene_ID == "P3G6" & input_df$ResolveDNA_version %in% c("v1", "v2.0", "v2"),]
low_callable_df <- read.csv('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/QC/Data/low_callable_loci.csv')
below_curve_df <- read.csv('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/QC/Data/below_curve_samples.csv')
bad_baf_df <- read.csv('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/QC/Data/bad_baf_samples.csv')
fail_vaf_df <- read.csv('~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/QC/Data/PTA_samples_failVAFcheck.txt')
filtered_samples <- unique(c(low_callable_df$Sample_name, below_curve_df$Sample_name, bad_baf_df$Sample_name , fail_vaf_df$samplename))  # samples that didn't pass QC
input_df_P3G6_filtered <- input_df_P3G6 %>% filter(!Sample_name %in% filtered_samples)
input_df_P3G6_filtered$Callable_Loci <- as.numeric(input_df_P3G6_filtered$Callable_Loci)
input_df_P3G6_filtered$sensitivity <- input_df_P3G6_filtered$Callable_Loci / max_callable
# Step 2: Define the product sensitivity calculator
calculate_product_sensitivity <- function(samples_str, sensitivity_df) {
sample_list <- strsplit(samples_str, "\\|")[[1]]
sensitivities <- sensitivity_df$sensitivity[sensitivity_df$Sample_name %in% sample_list]
if (length(sensitivities) == 0) return(1)  # fallback to avoid division by zero
return(1 - prod(1 - sensitivities, na.rm = TRUE))
}
# Step 3: Apply it to your tibble `x`
#x <- x %>%
#  mutate(product_sensitivity = sapply(samples, calculate_product_sensitivity, sensitivity_df = input_df_P3G6_filtered),
#         corr_branch_lengths = ctg_branch_lengths / product_sensitivity)
x <- x %>%
mutate(product_sensitivity = sapply(samples, calculate_product_sensitivity, sensitivity_df = input_df_P3G6_filtered),
corr_branch_lengths = sbs1_sbsblood_branch_lengths / product_sensitivity)
x <- x %>%
mutate(corr_branch_lengths = round(corr_branch_lengths))
phylo_tree$edge.length<-unname(x$corr_branch_lengths)
phylo_tree$edge
print(phylo_tree)
# Create the age dataframe
agedf <- data.frame(
tip.label = metadata$tip.label,
age = rep(14.7,32)
)
phylo_tree$agedf<-agedf
phylo_tree$edge.length[is.na(phylo_tree$edge.length)] <- 0
p <- ggtree(phylo_tree) +
geom_text2(aes(label = round(branch.length, 2)), hjust = -0.3) +
theme_tree2()
print(p)
res_P3G6=fit_tree(tree=phylo_tree,switch_nodes = c(24),xcross = c(0.999), niter = 20000, cores = 4, model = "poisson_tree", early_growth_model_on = 1.0)
# Save ultrametric tree
#save(res_P3G6, file = "~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/Rtreefit/Data/res_P3G6.RData")
#load("~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/Rtreefit/Data/res_P3G6.RData")
# Create the plot
p_P3G6 <- ggtree(res_P3G6$ultratree, color = "grey") +
theme_tree2() +
scale_x_continuous(name = "Age (Years since conception)", limits = c(0, 15), breaks = 0:15) +
# translucent grey box
annotate(
"rect",
xmin = res_P3G6$upper_node_lims$lb95, xmax = res_P3G6$upper_node_lims$ub95,
ymin = -Inf, ymax = Inf,
fill = "grey", alpha = 0.2
) +
# dotted vertical lines at x=0 and x=4.1
geom_vline(xintercept = 0, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 0.9, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 14.7, color = "red", linetype = "dotted") +
geom_vline(xintercept = res_P3G6$upper_node_lims$mean, color = "black", linetype = "dotted") +
theme(
axis.text.x = element_text(size = 10, angle = 90, vjust = 0.5, hjust = 1),
axis.title.x = element_text(size = 12, angle = 180, vjust = 0.5)
)
print(p_P3G6)
res_P3G6$upper_node_lims$mean
res_P3G6$upper_node_lims$ub95
res_P3G6$upper_node_lims$lb95
# Save as PDF
ggsave(
filename = "~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/Rtreefit/Figures/P3G6_ultrametric_tree_sbs1_blood_node24_0999.pdf",
plot = p_P3G6,
width = 8,
height = 6
)
# Calculate mutation rates for malignant and normal B-cells
P3G6_malignant_cells <- c( "P3G6GPDABC28", "PB11197-BLASC-BCELLP1P3", "PB11197-BLASC-BCELLP1C4", "PB11197-BLASC-BCELLP1L3", "PB11197-BLASC-BCELLP1J3", "PB11197-BLASC-BCELLP1K4", "PB11197-BLASC-BCELLP1O3", "PB11197-BLASC-BCELLP1I4", "PB11197-BLASC-BCELLP1B4", "P3G6GPDABC26" )
P3G6_normal_cells <- c( "P3G6GPDABC31", "PB11197-BLASC-BCELLP2F4", "PB11197-BLASC-BCELLP2D4", "PB11197-BLASC-BCELLP2C4", "PB11197-BLASC-BCELLP2B4", "PB11197-BLASC-BCELLP2E4")
age_P3G6 <- 14.7
tips_to_remove <- c("P3G6GPDABC31")
phylo_tree_subset_31 <- drop.tip(phylo_tree, tips_to_remove )
p <- ggtree(phylo_tree_subset_31) +
geom_text2(aes(label = round(branch.length, 2)), hjust = -0.3) +
theme_tree2()
print(p)
res_P3G6_31=fit_tree(tree=phylo_tree,switch_nodes = c(24),xcross = c(0.999), niter = 20000, cores = 4, model = "poisson_tree", early_growth_model_on = 1.0)
# Create the plot
p_P3G6_31 <- ggtree(res_P3G6_31$ultratree, color = "grey") +
theme_tree2() +
scale_x_continuous(name = "Age (Years since conception)", limits = c(0, 15), breaks = 0:15) +
# translucent grey box
annotate(
"rect",
xmin = res_P3G6_31$upper_node_lims$lb95, xmax = res_P3G6_31$upper_node_lims$ub95,
ymin = -Inf, ymax = Inf,
fill = "grey", alpha = 0.2
) +
# dotted vertical lines at x=0 and x=4.1
geom_vline(xintercept = 0, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 0.9, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 14.7, color = "red", linetype = "dotted") +
geom_vline(xintercept = res_P3G6_31$upper_node_lims$mean, color = "black", linetype = "dotted") +
theme(
axis.text.x = element_text(size = 10, angle = 90, vjust = 0.5, hjust = 1),
axis.title.x = element_text(size = 12, angle = 180, vjust = 0.5)
)
print(p_P3G6_31)
p_P3G6_31$upper_node_lims$mean
p_P3G6_31$upper_node_lims$ub95
p_P3G6_31$upper_node_lims$lb95
# Save as PDF
ggsave(
filename = "~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/Rtreefit/Figures/P3G6_ultrametric_tree_sbs1_blood_node24_0999_wo_P3G6GPDABC31.pdf",
plot = p_P3G6_31,
width = 8,
height = 6
)
res_P3G6$upper_node_lims$mean
res_P3G6$upper_node_lims$ub95
res_P3G6$upper_node_lims$lb95
View(x)
res_P3G6_31=fit_tree(tree=phylo_tree,switch_nodes = c(23),xcross = c(0.999), niter = 20000, cores = 4, model = "poisson_tree", early_growth_model_on = 1.0)
# Create the plot
p_P3G6_31 <- ggtree(res_P3G6_31$ultratree, color = "grey") +
theme_tree2() +
scale_x_continuous(name = "Age (Years since conception)", limits = c(0, 15), breaks = 0:15) +
# translucent grey box
annotate(
"rect",
xmin = res_P3G6_31$upper_node_lims$lb95, xmax = res_P3G6_31$upper_node_lims$ub95,
ymin = -Inf, ymax = Inf,
fill = "grey", alpha = 0.2
) +
# dotted vertical lines at x=0 and x=4.1
geom_vline(xintercept = 0, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 0.9, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 14.7, color = "red", linetype = "dotted") +
geom_vline(xintercept = res_P3G6_31$upper_node_lims$mean, color = "black", linetype = "dotted") +
theme(
axis.text.x = element_text(size = 10, angle = 90, vjust = 0.5, hjust = 1),
axis.title.x = element_text(size = 12, angle = 180, vjust = 0.5)
)
print(p_P3G6_31)
res_P3G6_31=fit_tree(tree=phylo_tree,switch_nodes = c(24),xcross = c(0.999), niter = 20000, cores = 4, model = "poisson_tree", early_growth_model_on = 1.0)
# Create the plot
p_P3G6_31 <- ggtree(res_P3G6_31$ultratree, color = "grey") +
theme_tree2() +
scale_x_continuous(name = "Age (Years since conception)", limits = c(0, 15), breaks = 0:15) +
# translucent grey box
annotate(
"rect",
xmin = res_P3G6_31$upper_node_lims$lb95, xmax = res_P3G6_31$upper_node_lims$ub95,
ymin = -Inf, ymax = Inf,
fill = "grey", alpha = 0.2
) +
# dotted vertical lines at x=0 and x=4.1
geom_vline(xintercept = 0, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 0.9, color = "blue", linetype = "dotted") +
geom_vline(xintercept = 14.7, color = "red", linetype = "dotted") +
geom_vline(xintercept = res_P3G6_31$upper_node_lims$mean, color = "black", linetype = "dotted") +
theme(
axis.text.x = element_text(size = 10, angle = 90, vjust = 0.5, hjust = 1),
axis.title.x = element_text(size = 12, angle = 180, vjust = 0.5)
)
print(p_P3G6_31)
res_P3G6_31$upper_node_lims$mean
res_P3G6_31$upper_node_lims$ub95
res_P3G6_31$upper_node_lims$lb95
# Save as PDF
ggsave(
filename = "~/surfdrive/Shared/pmc_vanboxtel/projects/Burkitt_github/3_Output/Rtreefit/Figures/P3G6_ultrametric_tree_sbs1_blood_node24_0999_wo_P3G6GPDABC31.pdf",
plot = p_P3G6_31,
width = 8,
height = 6
)
res_P3G6_31$upper_node_lims$mean
res_P3G6_31$upper_node_lims$ub95
res_P3G6_31$upper_node_lims$lb95
res_P3G6$upper_node_lims$mean
res_P3G6$upper_node_lims$ub95
res_P3G6$upper_node_lims$lb95
